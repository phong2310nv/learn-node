services:
  mongo:
    image: mongo:latest
    container_name: nasa-mongo-db
    ports:
      - "27017:27017"
    networks:
      - nasa-network
    volumes:
      - mongo-data:/data/db
  server:
    build: ./server
    # ports:
    #   - "8000:3000"
    networks:
      - nasa-network
  client:
    build:
      context: ./client
      # target: 
      args:
        REACT_APP_API_BASE: https://${APP_DOMAIN}/api/v1
    # ports:
    #   - "5000:80"
    env_file: ./.env
    # volumes:
    #   - ./client:/app
    #   - /app/node_modules
    networks:
      - nasa-network
    depends_on:
      - server
  nginx-server:
    build:
      context: ./nginx
      args:
        APP_DOMAIN: ${APP_DOMAIN}
        NODE_ENV: production  
    env_file: ./.env
    ports:
      - 80:80
      - 443:443
    networks:
      - nasa-network
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-www:/var/www/certbot
    depends_on:
      - server
      - client
  certbot:
    image: certbot/certbot
    container_name: nasa-certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do sleep 12h & wait $!; certbot renew --webroot -w /var/www/certbot --quiet; done'"
networks:
  nasa-network:
    driver: bridge
volumes:
  certbot-etc:
  certbot-www:
  mongo-data:
